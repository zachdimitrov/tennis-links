@using TennisLinks.Web.Areas.Administration.Models
@using TennisLinks.Models.Enumerations

@model ClubAddViewModel

<h2>Create a new Club</h2>

<h4>Fill the form and send it to database</h4>

@if(Model.Error != null)
{
<p id="error-message">@Model.Error</p>
}

@if (Model.Success != null)
{
    <p id="success-message">@Model.Success</p>
}

<hr />

@using (Html.BeginForm("Club", "CreateInfo", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(x => x.Name, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(x => x.Name, new
       {
           htmlAttributes = new
           {
               @class = "form-control mr-4",
               @placeholder = "name of new club"
           }
       })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.City, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            @Html.DropDownListFor(x => x.City, new SelectList(Model.Cities) ,
           "City is required",
           new { @class = "form-control mr-4" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Surface, new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            @Html.DropDownListFor(x => x.Surface, new SelectList(Enum.GetValues(typeof(Surface))), "Type of courts surface",
           new { @class = "form-control mr-4" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <input type="submit" value="CREATE CLUB" class="btn btn-primary" />
        </div>
    </div>
}